{"version":3,"sources":["formats/v1.js"],"names":["format","formatAttributes","nodes","map","type","node","tagName","toLowerCase","attributes","children","content","parts","attribute","trim","key","value"],"mappings":";;;;;kBAEwBA,M;QAcRC,gB,GAAAA,gB;;AAhBhB;;AAEe,SAASD,MAAT,CAAiBE,KAAjB,EAAwB;AACrC,SAAOA,MAAMC,GAAN,CAAU,gBAAQ;AACvB,QAAMC,OAAOC,KAAKD,IAAlB;AACA,QAAIA,SAAS,SAAb,EAAwB;AACtB,UAAME,UAAUD,KAAKC,OAAL,CAAaC,WAAb,EAAhB;AACA,UAAMC,aAAaP,iBAAiBI,KAAKG,UAAtB,CAAnB;AACA,UAAMC,WAAWT,OAAOK,KAAKI,QAAZ,CAAjB;AACA,aAAO,EAACL,UAAD,EAAOE,gBAAP,EAAgBE,sBAAhB,EAA4BC,kBAA5B,EAAP;AACD;;AAED,WAAO,EAACL,UAAD,EAAOM,SAASL,KAAKK,OAArB,EAAP;AACD,GAVM,CAAP;AAWD;;AAEM,SAAST,gBAAT,CAA2BO,UAA3B,EAAuC;AAC5C,SAAOA,WAAWL,GAAX,CAAe,qBAAa;AACjC,QAAMQ,QAAQ,qBAAUC,UAAUC,IAAV,EAAV,EAA4B,GAA5B,CAAd;AACA,QAAMC,MAAMH,MAAM,CAAN,CAAZ;AACA,QAAMI,QAAQ,OAAOJ,MAAM,CAAN,CAAP,KAAoB,QAApB,GACV,mBAAQA,MAAM,CAAN,CAAR,CADU,GAEV,IAFJ;AAGA,WAAO,EAACG,QAAD,EAAMC,YAAN,EAAP;AACD,GAPM,CAAP;AAQD","file":"v1.js","sourcesContent":["import {splitHead, unquote} from './util'\n\nexport default function format (nodes) {\n  return nodes.map(node => {\n    const type = node.type\n    if (type === 'element') {\n      const tagName = node.tagName.toLowerCase()\n      const attributes = formatAttributes(node.attributes)\n      const children = format(node.children)\n      return {type, tagName, attributes, children}\n    }\n\n    return {type, content: node.content}\n  })\n}\n\nexport function formatAttributes (attributes) {\n  return attributes.map(attribute => {\n    const parts = splitHead(attribute.trim(), '=')\n    const key = parts[0]\n    const value = typeof parts[1] === 'string'\n      ? unquote(parts[1])\n      : null\n    return {key, value}\n  })\n}\n"]}